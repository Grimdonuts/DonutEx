FROM debian:12-slim

RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    pkg-config \
    git \
    wget \
    unzip \
    lua5.4 \
    liblua5.4-dev \
    libx11-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libxrandr-dev \
    libxi-dev \
    libxxf86vm-dev \
    libxcursor-dev \
    xorg-dev \
    python3 \
    libwayland-dev \
    libxkbcommon-dev \
    libgtk-3-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /src

RUN [ ! -d imgui ] && git clone https://github.com/ocornut/imgui.git || true && \
    [ ! -d nativefiledialog-extended ] && git clone https://github.com/btzy/nativefiledialog-extended.git || true && \
    [ ! -d gl3w ] && git clone https://github.com/skaslev/gl3w.git || true && \
    [ ! -d glfw ] && git clone https://github.com/glfw/glfw.git || true && \
    [ ! -d lua ] && git clone https://github.com/lua/lua.git || true && \
    [ ! -d nanosvg ] && git clone https://github.com/memononen/nanosvg.git || true


RUN cd imgui && git checkout docking

RUN cd gl3w && python3 gl3w_gen.py

RUN cd glfw && \
    cmake -B build -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release && \
    cmake --build build -j$(nproc) && \
    cmake --install build --prefix /usr/local

RUN cd imgui && \
    g++ -I. -Ibackends -c \
        imgui.cpp \
        imgui_draw.cpp \
        imgui_tables.cpp \
        imgui_widgets.cpp \
        backends/imgui_impl_glfw.cpp \
        backends/imgui_impl_opengl3.cpp \
        misc/cpp/imgui_stdlib.cpp && \
    ar rcs libimgui.a *.o && \
    mv libimgui.a /usr/local/lib && \
    mkdir -p /usr/local/include/imgui && \
    cp -r *.h backends misc /usr/local/include/imgui && \
    rm -f *.o

RUN cd gl3w && \
    python3 gl3w_gen.py && \
    gcc -c src/gl3w.c -Iinclude && \
    ar rcs libgl3w.a gl3w.o && \
    mv libgl3w.a /usr/local/lib && \
    cp -r include /usr/local/include/gl3w && \
    rm -f gl3w.o

RUN cd nativefiledialog-extended && \
    cmake -B build -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release && \
    cmake --build build -j$(nproc) && \
    cmake --install build --prefix /usr/local

RUN cd lua && make a

COPY . .

# RUN rm -rf build && mkdir -p build && \
#     cmake -B build -DCMAKE_BUILD_TYPE=Release && \
#     cp -a plugins build/ && \
#     cmake --build build -j$(nproc)
